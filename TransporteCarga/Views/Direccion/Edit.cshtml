@model TransporteCarga.Models.Direccion

@{
    ViewBag.Title = "Edit";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Editar</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Lista", "Index")
            </li>
            <li class="active">
                <strong>Editar</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
			@Html.ActionLink("Volver al Listado", "Index", null, new { @class = "btn btn-primary"})
        </div>
    </div>
</div>




<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Editarar Direccion</h5>
                </div>
                <div class="ibox-content">

				@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.direccionId)

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion)
                @Html.ValidationMessageFor(model => model.descripcion)
            </div>
        </div>

        @*<div class="form-group">
            <label class="control-label col-md-2">Ubicación</label>
            <div class="col-md-10">
                @Html.DropDownList("ubigeoId", String.Empty)
                @Html.ValidationMessageFor(model => model.ubigeoId)
            </div>
        </div>*@


        <div class="form-group">
            <label class="control-label col-md-2" for="order_id">Departamento</label>
            <div class="col-md-10">
                @Html.DropDownList("departamentoId", String.Empty)
                @Html.ValidationMessageFor(model => model.ubigeoId)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="order_id">Provincia</label>
            <div class="col-md-10">
                @Html.DropDownList("provinciaId", String.Empty)
                @Html.ValidationMessageFor(model => model.ubigeoId)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="order_id">Distrito</label>
            <div class="col-md-10">
                @Html.DropDownList("ubigeoId", String.Empty)
                @Html.ValidationMessageFor(model => model.ubigeoId)
            </div>
        </div>


        @*<div class="form-group">
            @Html.LabelFor(model => model.usuarioCreacion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.usuarioCreacion)
                @Html.ValidationMessageFor(model => model.usuarioCreacion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.usuarioModificacion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.usuarioModificacion)
                @Html.ValidationMessageFor(model => model.usuarioModificacion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaCreacion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaCreacion)
                @Html.ValidationMessageFor(model => model.fechaCreacion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaModificacion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaModificacion)
                @Html.ValidationMessageFor(model => model.fechaModificacion)
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary" />
				@Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white"})
            </div>
        </div>
    </div>
}


                </div>
            </div>
        </div>
    </div>
 </div>



@section Styles {

    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
}



@section Scripts {
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
    $(document).ready(function () {



        //return;
        //Provincias
        $("#departamentoId").change(function () {
            $.ajax({
                url: "@Url.Action("GetProvincias", "Ubigeo")",
                data: { codigo: $("#departamentoId").val().substring(0, 2) },
            type: "GET",
            dataType: "json",
            success: function (data) {
                $("#provinciaId").empty();
                for (var i = 0; i < data.length; i++) {
                    $("#provinciaId").append("<option value=" + data[i].codigo + ">" + data[i].descripcion + "</option>");
                }
            },
            error: function () {

            }
        });
        });

        //Distritos
        $("#provinciaId").change(function () {
            $.ajax({
                url: "@Url.Action("GetDistritos", "Ubigeo")",
                data: { codigo: $("#departamentoId").val().substring(0, 4) },
            type: "GET",
            dataType: "json",
            success: function (data) {
                $("#ubigeoId").empty();
                for (var i = 0; i < data.length; i++) {
                    $("#ubigeoId").append("<option value=" + data[i].ubigeoId + ">" + data[i].descripcion + "</option>");
                }
            },
            error: function () {

            }
        });
    });


    });

        var config = {
            '.chosen-select': {},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 10 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
            '.chosen-select-width': { width: "95%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }


    </script>
}