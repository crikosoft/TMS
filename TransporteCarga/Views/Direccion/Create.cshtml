@model TransporteCarga.Models.Direccion

@{
    ViewBag.Title = "Create";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Crear</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Lista", "Index")
            </li>
            <li class="active">
                <strong>Crear</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
			@Html.ActionLink("Volver al Listado", "Index", null, new { @class = "btn btn-primary"})
        </div>
    </div>
</div>



<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Crear Direccion</h5>
                </div>
                <div class="ibox-content">

				@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion)
                @Html.ValidationMessageFor(model => model.descripcion)
            </div>
        </div>

        @*<div class="form-group">
            <label class="control-label col-md-2">Ubicación</label>
            <div class="col-md-10">
                @Html.DropDownList("departamentoId", String.Empty)
                @Html.ValidationMessageFor(model => model.ubigeoId)
            </div>
        </div>*@

        <div class="form-group">
            @*<label class="control-label col-md-2">Ubicación</label>*@
            <label class="control-label col-md-2" for="order_id">Departamento</label>
            <div class="col-md-10">
                @*@Html.DropDownList("ubigeoId", String.Empty)*@
                @*@Html.DropDownList("departamentoId", (IEnumerable<SelectListItem>)ViewBag.departamentoId, new { @class = "chosen-select" })*@
                @Html.DropDownList("departamentoId", String.Empty)
                @Html.ValidationMessageFor(model => model.ubigeoId)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="order_id">Provincia</label>
            <div class="col-md-10">
                @Html.DropDownList("provinciaId", String.Empty)
                @*@Html.DropDownList("provinciaId", (IEnumerable<SelectListItem>)ViewBag.provinciaId, new { @class = "chosen-select" })*@

                @Html.ValidationMessageFor(model => model.ubigeoId)
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="order_id">Distrito</label>
            <div class="col-md-10">
                @*@Html.DropDownList("ubigeoId", String.Empty)*@
                @Html.DropDownList("ubigeoId", String.Empty)
                @*@Html.DropDownList("ubigeoId", (IEnumerable<SelectListItem>)ViewBag.ubigeoId, new { @class = "chosen-select" })*@
                @Html.ValidationMessageFor(model => model.ubigeoId)
            </div>
        </div>


        <div>
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Dirección</h5>
                </div>
                <div class="ibox-content">
                    <div class="google-map" id="map1"></div>
                </div>
            </div>
        </div>
        @*<select data-placeholder="Elija el Remitente..." class="chosen-select" style="width:250px;" tabindex="1" id="remitente">
            <option value="">Seleccione</option>

            @foreach (var item in Model.Clientes)
            {
                <option value=@Html.DisplayFor(modelItem => item.clienteid)>
                    @Html.DisplayFor(modelItem => item.razonSocial)
                </option>
            }
        </select>*@



        @*<div class="form-group">
            @Html.LabelFor(model => model.usuarioCreacion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.usuarioCreacion)
                @Html.ValidationMessageFor(model => model.usuarioCreacion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.usuarioModificacion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.usuarioModificacion)
                @Html.ValidationMessageFor(model => model.usuarioModificacion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaCreacion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaCreacion)
                @Html.ValidationMessageFor(model => model.fechaCreacion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaModificacion, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaModificacion)
                @Html.ValidationMessageFor(model => model.fechaModificacion)
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-primary" />
				@Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white"})
            </div>
        </div>
    </div>
}

                </div>
            </div>
        </div>
    </div>
 </div>

 @section Styles {

    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
}



@section Scripts {
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/validate")
@Scripts.Render("~/bundles/jqueryval")

@Scripts.Render("https://maps.googleapis.com/maps/api/js?key=AIzaSyD2ayRvjIwhtCz6RjyQHpa22PuYVKRq5hg")

<script type="text/javascript">

    google.maps.event.addDomListener(window, 'load', init);

    $(document).ready(function () {

        //return;
        //Provincias 
        $("#departamentoId").change(function () {
            $.ajax({
                url: "@Url.Action("GetProvincias", "Ubigeo")",
                data: { codigo: $("#departamentoId").val().substring(0, 2) },
            type: "GET",
            dataType: "json",
            success: function (data) {
                $("#provinciaId").empty();
                $("#ubigeoId").empty();
                $("#provinciaId").append("<option value=0>--Seleccione--</option>");
                for (var i = 0; i < data.length; i++) {
                    $("#provinciaId").append("<option value=" + data[i].codigo + ">" + data[i].descripcion + "</option>");
                }

            },
            error: function () {

            }
        });
        });

        //Distritos
        $("#provinciaId").change(function () {
            $.ajax({
                url: "@Url.Action("GetDistritos", "Ubigeo")",
                data: { codigo: $("#provinciaId").val().substring(0, 4) },
            type: "GET",
            dataType: "json",
            success: function (data) {
                $("#ubigeoId").empty();
                for (var i = 0; i < data.length; i++) {
                    $("#ubigeoId").append("<option value=" + data[i].ubigeoId + ">" + data[i].descripcion + "</option>");
                }
            },
            error: function () {

            }
        });
    });


    });

        var config = {
            '.chosen-select': {},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 10 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
            '.chosen-select-width': { width: "95%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }


        function init() {
            // Options for Google map
            // More info see: https://developers.google.com/maps/documentation/javascript/reference#MapOptions
            var mapOptions1 = {
                zoom: 11,
                center: new google.maps.LatLng(-12.079515, -77.0257472),
                // Style for Google Maps
                styles: [{ "featureType": "water", "stylers": [{ "saturation": 43 }, { "lightness": -11 }, { "hue": "#0088ff" }] }, { "featureType": "road", "elementType": "geometry.fill", "stylers": [{ "hue": "#ff0000" }, { "saturation": -100 }, { "lightness": 99 }] }, { "featureType": "road", "elementType": "geometry.stroke", "stylers": [{ "color": "#808080" }, { "lightness": 54 }] }, { "featureType": "landscape.man_made", "elementType": "geometry.fill", "stylers": [{ "color": "#ece2d9" }] }, { "featureType": "poi.park", "elementType": "geometry.fill", "stylers": [{ "color": "#ccdca1" }] }, { "featureType": "road", "elementType": "labels.text.fill", "stylers": [{ "color": "#767676" }] }, { "featureType": "road", "elementType": "labels.text.stroke", "stylers": [{ "color": "#ffffff" }] }, { "featureType": "poi", "stylers": [{ "visibility": "off" }] }, { "featureType": "landscape.natural", "elementType": "geometry.fill", "stylers": [{ "visibility": "on" }, { "color": "#b8cb93" }] }, { "featureType": "poi.park", "stylers": [{ "visibility": "on" }] }, { "featureType": "poi.sports_complex", "stylers": [{ "visibility": "on" }] }, { "featureType": "poi.medical", "stylers": [{ "visibility": "on" }] }, { "featureType": "poi.business", "stylers": [{ "visibility": "simplified" }] }]
            };

            var mapOptions2 = {
                zoom: 11,
                center: new google.maps.LatLng(40.6700, -73.9400),
                // Style for Google Maps
                styles: [{ "featureType": "all", "elementType": "all", "stylers": [{ "invert_lightness": true }, { "saturation": 10 }, { "lightness": 30 }, { "gamma": 0.5 }, { "hue": "#435158" }] }]
            };

            var mapOptions3 = {
                center: new google.maps.LatLng(36.964645, -122.01523),
                zoom: 18,
                mapTypeId: google.maps.MapTypeId.SATELLITE,
                // Style for Google Maps
                styles: [{ "featureType": "road", "elementType": "geometry", "stylers": [{ "visibility": "off" }] }, { "featureType": "poi", "elementType": "geometry", "stylers": [{ "visibility": "off" }] }, { "featureType": "landscape", "elementType": "geometry", "stylers": [{ "color": "#fffffa" }] }, { "featureType": "water", "stylers": [{ "lightness": 50 }] }, { "featureType": "road", "elementType": "labels", "stylers": [{ "visibility": "off" }] }, { "featureType": "transit", "stylers": [{ "visibility": "off" }] }, { "featureType": "administrative", "elementType": "geometry", "stylers": [{ "lightness": 40 }] }]
            };

            var mapOptions4 = {
                zoom: 11,
                center: new google.maps.LatLng(40.6700, -73.9400),
                // Style for Google Maps
                styles: [{ "stylers": [{ "hue": "#18a689" }, { "visibility": "on" }, { "invert_lightness": true }, { "saturation": 40 }, { "lightness": 10 }] }]
            };

            var fenway = new google.maps.LatLng(42.345573, -71.098326);
            var mapOptions5 = {
                zoom: 14,
                center: fenway,
                // Style for Google Maps
                styles: [{ featureType: "landscape", stylers: [{ saturation: -100 }, { lightness: 65 }, { visibility: "on" }] }, { featureType: "poi", stylers: [{ saturation: -100 }, { lightness: 51 }, { visibility: "simplified" }] }, { featureType: "road.highway", stylers: [{ saturation: -100 }, { visibility: "simplified" }] }, { featureType: "road.arterial", stylers: [{ saturation: -100 }, { lightness: 30 }, { visibility: "on" }] }, { featureType: "road.local", stylers: [{ saturation: -100 }, { lightness: 40 }, { visibility: "on" }] }, { featureType: "transit", stylers: [{ saturation: -100 }, { visibility: "simplified" }] }, { featureType: "administrative.province", stylers: [{ visibility: "off" }]/**/ }, { featureType: "administrative.locality", stylers: [{ visibility: "off" }] }, { featureType: "administrative.neighborhood", stylers: [{ visibility: "on" }]/**/ }, { featureType: "water", elementType: "labels", stylers: [{ visibility: "on" }, { lightness: -25 }, { saturation: -100 }] }, { featureType: "water", elementType: "geometry", stylers: [{ hue: "#ffff00" }, { lightness: -25 }, { saturation: -97 }] }]
            };

            var panoramaOptions = {
                position: fenway,
                pov: {
                    heading: 10,
                    pitch: 10
                }
            };
            var panorama = new google.maps.StreetViewPanorama(document.getElementById('pano'), panoramaOptions);

            // Get all html elements for map
            var mapElement1 = document.getElementById('map1');
            var mapElement2 = document.getElementById('map2');
            var mapElement3 = document.getElementById('map3');
            var mapElement4 = document.getElementById('map4');

            // Create the Google Map using elements
            var map1 = new google.maps.Map(mapElement1, mapOptions1);
            var map2 = new google.maps.Map(mapElement2, mapOptions2);
            var map3 = new google.maps.Map(mapElement3, mapOptions3);
            var map4 = new google.maps.Map(mapElement4, mapOptions4);
        }


</script>
}