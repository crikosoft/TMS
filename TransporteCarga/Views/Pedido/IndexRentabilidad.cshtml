@model IEnumerable<TransporteCarga.Models.Pedido>

@{
    ViewBag.Title = "Index";
}
<h2>Rentabilidad</h2>
<div class="row">

    @using (Html.BeginForm())
    {


        <div class="col-sm-3">
            <div class="form-group">
                <label class="control-label col-md-2"> Fecha Inicio:</label>
                @Html.TextBox("start", "{0:yyyy-MM-dd}", new { @type = "date" })
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                <label class="control-label col-md-2"> Fecha Fin:</label>
                @Html.TextBox("end", "{0:yyyy-MM-dd}", new { @type = "date" })
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                <input type="submit" value="Buscar" class="btn btn-success" /> <span> </span>
            </div>
        </div>



    }


</div>



<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Rentabilidad por Cliente</h5>
                    @*<div class="ibox-tools">
                            @Html.ActionLink("Crear Nuevo", "Create", null, new { @class = "btn btn-primary btn-xs" })
                        </div>*@
                </div>
                <div class="ibox-content">


                    <table class="table table-stripped table-bordered table-hover dataTables-example " data-page-size="10">

                        <thead>
                            <tr>

                                <th>
                                    Razón Social
                                </th>
                                <th>
                                    RUC
                                </th>
                                <th>
                                    Nro de Pedido
                                </th>
                                <th>
                                    Documento Venta
                                </th>
                                <th>
                                    Moneda
                                </th>
                                <th>
                                    Ventas
                                </th>
                                <th>
                                    Costos
                                </th>
                                <th>
                                    Rentabilidad
                                </th>
                                <th>
                                   Distrito
                                </th>
                                <th>
                                    Empresa Administradora
                                </th>


                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model)
                            {
                                    <tr>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Cliente.razonSocial)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Cliente.ruc)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.pedidoId)
                                        </td>
                                        <td>
                                            @{var factura = "";

                                            if (item.Ventas.Count() > 0)
                                            {
                                                factura = item.Ventas[0].serie + "-" + item.Ventas[0].numero;
                                            }
                                            }
                                            @factura

                                        </td>
                                        <td>
                                            S/.
                                        </td>
                                        <td align="right">
                                            @{var rentabilidad = 0.0;
                                            var ventas = 0.0;
                                            double? costos = 0.0;
                                            //if (item.Pedidos.Where(a => a.EstadoPedido.nombre != "anulado").Count() > 0)
                                            //{
                                            //    ventas = item.Pedidos.Where(a => a.EstadoPedido.nombre != "anulado").Sum(a => a.Total);
                                            //}

                                            ventas = item.Total;
                                            }
                                            @string.Format("{0:0.00}", @ventas)

                                        </td>
                                        <td align="right">
                                            @{

                                            //if (item.Pedidos.Where(a => a.EstadoPedido.nombre != "anulado").Count() > 0)
                                            //{
                                            //    foreach (var item2 in item.Pedidos.Where(a => a.EstadoPedido.nombre != "anulado"))
                                            //    {
                                            //        costos = costos + item2.PedidoDetalles.Sum(b => b.Producto.precioCosto) * item2.PedidoDetalles.Sum(b => b.cantidad);

                                            //    }
                                            //}

                                            foreach (var item2 in item.PedidoDetalles)
                                            {
                                                //costos = item2.Producto.Precios.Where(a => a.fecha <= item.fechaCreacion).Count();
                                                if (item2.Producto.Precios.Where(a => a.fecha <= item.fechaCreacion).Count() > 0)
                                                {
                                                    costos = costos + item2.Producto.Precios.Where(a => a.fecha <= item.fechaCreacion).LastOrDefault().precio * item2.cantidad;
                                                }
                                                else
                                                {
                                                    costos = costos + item2.Producto.precioCosto * item2.cantidad;
                                                }


                                            }
                                            }


                                            @string.Format("{0:0.00}", @costos)



                                        </td>

                                        <td align="right">
                                            @{
                                rentabilidad = ventas - (double)costos;
                                            }
                                            @string.Format("{0:0.00}", @rentabilidad)

                                        </td>



                                        <td>
                                            @Html.DisplayFor(modelItem => item.Cliente.Distrito.nombre)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Cliente.EmpresaAdministradora.RazonSocial)
                                        </td>

                                    </tr>
                                }
                            


                        </tbody>
                        <tfoot>
                            <tr>

                                <th>
                                    Razón Social
                                </th>
                                <th>
                                    RUC
                                </th>
                                <th>
                                    Nro de Pedido
                                </th>
                                <th>
                                    Documento Venta
                                </th>
                                <th>
                                    Moneda
                                </th>
                                <th>
                                    Ventas
                                </th>
                                <th>
                                    Costos
                                </th>
                                <th>
                                    Rentabilidad
                                </th>
                                <th>
                                    Distrito
                                </th>
                                <th>
                                    Empresa Administradora
                                </th>

                            </tr>
                        </tfoot>
                    </table>


                </div>
            </div>
        </div>
    </div>
</div>



@section Styles {

    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/footableStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
}

@section Scripts {

    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/footable")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/chosen")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.dataTables-example').DataTable({
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'ExampleFile' },
                    { extend: 'pdf', title: 'ExampleFile' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                "order": [[0, "asc"]],
                "pageLength": 25

            });


            $('.footable').footable();

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            // Eventos de filtros

            $('input.column_filter').on('keyup click', function () {
                filterColumn($(this).attr('data-column'));
            });

            $('select.column_filter').on('onchange click', function () {
                filterColumn($(this).attr('data-column'));
            });

            //Filtro de Chosen-select
            var config = {
                '.chosen-select': {},
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, no encontrado!' },
                '.chosen-select-width': { width: "200%" }
                //
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }


        });

        function filterColumn(i) {
            $('.dataTables-example').DataTable().column(i).search(
                $('#col' + i + '_filter').val()
            ).draw();
        }

    </script>
}