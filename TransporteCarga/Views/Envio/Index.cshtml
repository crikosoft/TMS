@model IEnumerable<TransporteCarga.Models.Envio>

@{
    ViewBag.Title = "Index";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Lista</h2>
        <ol class="breadcrumb">
            <li class="active">
                <strong>Chofer</strong>
            </li>
        </ol>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Lista de Choferes y Guías</h5>
					<div class="ibox-tools">
						@Html.ActionLink("Asignar Chofer a Guías", "Create", null, new { @class = "btn btn-primary btn-lg"})

					</div>
                </div>
                <div class="ibox-content">

                    <table class="table table-stripped table-bordered table-hover dataTables-example " data-page-size="10">
                        <thead>
                            <tr>
                                <th>
                                    Estado
                                </th>
                                <th>
                                    Envío Id
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Proveedor.razonSocial)
                                </th>
                                <th>
                                   Chofer
                                </th>

                                <th>
                                    @Html.DisplayNameFor(model => model.Vehiculo.placaUnidad)
                                </th>
                                <th>
                                    Sub Total
                                </th>
                                <th>
                                    IGV
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Total)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.fechaTraslado)
                                </th>
                                <th>
                                    Cant. Guías
                                </th>

                                <th></th>
                                <th></th>
                                <th>
                                    @Html.DisplayNameFor(model => model.fechaPagoProgramado)
                                </th>
                            </tr>
                            </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    @if (item.EstadoEnvio.nombre == "Creado")
                                    {
                                        <td class="client-status"><span class="label label-danger">@Html.DisplayFor(modelItem => item.EstadoEnvio.nombre)</span></td>
                                    }
                                    else 
                                    { 
                                         <td class="client-status"><span class="label label-primary">@Html.DisplayFor(modelItem => item.EstadoEnvio.nombre)</span></td>
                                    }
                                    <td>
                                        @Html.DisplayFor(modelItem => item.envioId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Proveedor.razonSocial)
                                    </td>
                                    <td>
                                        @{
                                    var nombreCompleto = "";
                                    nombreCompleto = item.Chofer.nombres + " " + item.Chofer.apellidos;
                                        }
                                        @nombreCompleto
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Vehiculo.placaUnidad)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.subTotal)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.igv)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Total)
                                    </td>
                                   
                                    <td>
                                        @Html.DisplayFor(modelItem => item.fechaTraslado)
                                    </td>
                                    <td>
                                        @{
                                            int cantGuias =0;
                                            cantGuias = item.Ordenes.Count();
                                        }


                                        @cantGuias
                                    </td>
                                    <td>
                                        @Html.ActionLink("Detalle", "Details", new { id = item.envioId }, new { @class = "btn btn-primary btn-sm" })
                                        @Html.ActionLink("Editar", "Edit", new { id = item.envioId }, new { @class = "btn btn-white btn-sm" })
                                        @Html.ActionLink("Eliminar", "Delete", new { id = item.envioId }, new { @class = "btn btn-white btn-sm" })
                                    </td>
                                    <td>
                                        @if (item.Pagos.Count == 0)
                                        {
                                            @*<a href="~/Pago/Create/@Html.DisplayFor(modelItem =>item.envioId )" class="btn btn-danger btn-sm"><i class="fa fa-archive"></i> Pago </a>*@
                                            @*<span class="btn btn-danger btn-sm"><i class="fa fa-money"></i> Pago</span>*@
                                            <span class="btn btn-danger btn-sm" data-container="body" data-toggle="popover" data-placement="left" data-content="Registre en el Pago desde el Menú Pagos Proveedores"><i class="fa fa-money"></i> Pago </span>
                                        }
                                        else if (item.EstadoEnvio.nombre == "Creado")
                                        {
                                            @*<a href="~/Pago/Edit/@Html.DisplayFor(modelItem =>item.envioId )" class="btn btn-warning btn-sm"><i class="fa fa-archive"></i> Pago </a>*@
                                        <span class="btn btn-warning btn-sm" data-container="body" data-toggle="popover" data-placement="left" data-content="Nro. Pagos ingresados: @item.Pagos.Count()">
                                            <i class="fa fa-money"></i> Pago </span>
                                        }
                                        else
                                        {
                                            @*<a href="~/Pago/Edit/@Html.DisplayFor(modelItem =>item.envioId )" class="btn btn-primary btn-sm"><i class="fa fa-archive"></i> Pago </a>*@
                                            @*<span class="btn btn-primary btn-sm"><i class="fa fa-money"></i> Pago @item.Pagos.FirstOrDefault().numero</span>*@
                                            @*<span class="btn btn-primary btn-sm" data-container="body" data-toggle="popover" data-placement="left" data-content="Pago ingresado Nro:  @item.Pagos.FirstOrDefault().TipoDocumento.nombre @item.Pagos.FirstOrDefault().numero"><i class="fa fa-money"></i> Pago </span>*@
                                        <span class="btn btn-primary btn-sm" data-container="body" data-toggle="popover" data-placement="left" data-content="Nro. Pagos ingresados: @item.Pagos.Count()">
                                            <i class="fa fa-money"></i> Pago
                                        </span>
                                        }
</td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.fechaPagoProgramado)
                                    </td>
                                </tr>
                            }
                            </tbody>
                        <tfoot>
                            <tr>
                                <th>
                                    Estado
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.envioId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Proveedor.razonSocial)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Chofer.nombres)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Vehiculo.placaUnidad)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.subTotal)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.igv)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Total)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.fechaTraslado)
                                </th>
                                <th>
                                    Cant. Guías
                                </th>
                                <th></th>
                                <th></th>
                                <th>
                                    @Html.DisplayNameFor(model => model.fechaPagoProgramado)
                                </th>
                            </tr>
                            </tfoot>
</table>

                </div>
            </div>
        </div>
    </div>
 </div>



@section Styles {

    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/footableStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
}

@section Scripts {

    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/footable")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/chosen")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.dataTables-example').DataTable({
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'ExampleFile' },
                    { extend: 'pdf', title: 'ExampleFile' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                //"order": [[0, "desc"]],
                "pageLength": 25

            });


            $('.footable').footable();

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            // Eventos de filtros

            $('input.column_filter').on('keyup click', function () {
                filterColumn($(this).attr('data-column'));
            });

            $('select.column_filter').on('onchange click', function () {
                filterColumn($(this).attr('data-column'));
            });

            //Filtro de Chosen-select
            var config = {
                '.chosen-select': {},
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, no encontrado!' },
                '.chosen-select-width': { width: "200%" }
                //
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }


        });

        function filterColumn(i) {
            $('.dataTables-example').DataTable().column(i).search(
                $('#col' + i + '_filter').val()
            ).draw();
        }

    </script>
}