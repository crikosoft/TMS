@model IEnumerable<TransporteCarga.Models.Venta>

@{
    ViewBag.Title = "Index";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Lista</h2>
        <ol class="breadcrumb">
            <li class="active">
                <strong>Docuentos de Ventas</strong>
            </li>
        </ol>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Lista de Guías con Factura</h5>
                    <div class="ibox-tools">
                        @Html.ActionLink("Asignar Factura a Guía(s)", "Create", null, new { @class = "btn btn-primary btn-lg" })

                    </div>
                </div>
                <div class="ibox-content">

                    <table class="table table-stripped table-bordered table-hover dataTables-example " data-page-size="10">
                        <thead>
                            <tr>
                                <th hidden="hidden"></th>
                                <th>
                                    Nro Factura
                                </th>
                                <th>
                                   Razón Social Cliente 
                                </th>
                                <th>
                                    Nro Guía(s)
                                </th>
                                <th>
                                    Total
                                </th>
                                <th>
                                    Fecha Creación
                                </th>
                                <th></th>
                                <th>Chofer</th>
                                <th>Pago</th>
                                <th>Nota Credito</th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td hidden="hidden">
                                        @Html.DisplayFor(modelItem => item.ventaId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.serie) - @Html.DisplayFor(modelItem => item.numero)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Ordenes.FirstOrDefault().ClientePago.razonSocial)
                                    </td>
                                    <td>
                                        @{ string cadenaGuias = "";}
                                        @foreach (var orden in item.Ordenes.Where(a => a.GuiasSalida.Count() > 0 && a.Envios.Count() > 0))
                                        {

                                            cadenaGuias = cadenaGuias + orden.GuiasSalida.FirstOrDefault().serie + "-" + orden.GuiasSalida.FirstOrDefault().numero + ", ";
                                        }
                                        @cadenaGuias
                                    </td>


                                    <td align="right">
                                        @{
                                        double? totalGuias = 0;
                                        totalGuias = item.Ordenes.AsEnumerable().Sum(o => o.Total);
                                        }
                                        
                                        @string.Format("{0:0,0.00}", @totalGuias)
                                        @*@Html.DisplayFor(modelItem => item.Ordenes.AsEnumerable().Sum(o=>o.Total))*@
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.fecha)
                                    </td>

                                    <td>
                                        @*<a href="~/Venta/Document/@item.ordenId" class="btn btn-primary btn-sm"> Detalle </a>*@
                                        <a href="~/Venta/Edit/@item.ventaId" class="btn btn-white btn-sm"> Editar </a>
                                        <a href="~/Venta/Document/@Html.DisplayFor(modelItem => item.ventaId)" target="_blank" class="btn btn-primary btn-sm"><i class="fa fa-print"></i>  </a>
                                        <a href="~/Venta/Delete/@Html.DisplayFor(modelItem => item.ventaId)" class="btn btn-primary btn-sm"><i class="fa fa-remove"></i>  </a>


                                    </td>

                                    <td>
                                        
                                        @{string choferes = "";}
                                        @foreach (var orden in item.Ordenes.Where(a => a.GuiasSalida.Count() > 0 && a.Envios.Count() > 0))
                                        {
                                            choferes += orden.Envios.FirstOrDefault().Chofer.iniciales + ",";
                                                @*<span class="btn btn-primary btn-sm" data-container="body" data-toggle="popover"><i class="fa fa-truck"></i> Chofer @orden.Envios.FirstOrDefault().Chofer.iniciales</span>*@
                                        }
                                        @choferes

                                    </td>

                                   
                                    

                                    <td>

                                        @if (item.Ordenes.Count() > 0)
                                        { 
                                            @*if (item.Ordenes.FirstOrDefault().Estados.Where(a => a.EstadoOrden.nombre == "Con Factura").Count() > 0 )
                                            {

                                                <a href="~/Venta/EditPayment/@Html.DisplayFor(modelItem =>item.Ordenes.FirstOrDefault().Ventas.FirstOrDefault().ventaId )" class="btn btn-danger btn-sm"><i class="fa fa-money"></i> Pend. Pago </a>

                                            }*@
                                            //if (item.Ordenes.FirstOrDefault().Estados.Where(a => a.EstadoOrden.nombre == "Cobrado").Count() > 0)
                                            if (item.Ordenes.FirstOrDefault().EstadoOrden.nombre == "Cobrado")
                                            {
                                                <a href="~/Venta/EditPayment/@Html.DisplayFor(modelItem => item.Ordenes.FirstOrDefault().Ventas.FirstOrDefault().ventaId)" class="btn btn-primary btn-sm"><i class="fa fa-money"></i> Pagado </a>
                                            }
                                            else
                                            {
                                                 <a href="~/Venta/EditPayment/@Html.DisplayFor(modelItem => item.Ordenes.FirstOrDefault().Ventas.FirstOrDefault().ventaId)" class="btn btn-danger btn-sm"><i class="fa fa-money"></i> Pend. Pago </a>
                                            }
                                        }
                                    </td>
                                    <td>
                                        @{double? totalNotasCredito = 0;
                                        }
                                        @if (item.NotasCredito.Count() > 0)
                                        {
                                            
                                            totalNotasCredito = item.NotasCredito.Sum(a=>a.monto);
                                            
                                        }
                                       @string.Format("{0:0,0.00}", @totalNotasCredito)
                                    </td>
                                </tr>
                            }


                        </tbody>
                        <tfoot>
                            <tr>
                                <th hidden="hidden"></th>
                                <th>
                                    Nro Factura
                                </th>
                                <th>
                                    Razón Social Cliente
                                </th>
                                <th>
                                    Nro Guía(s)
                                </th>
                                <th>
                                    Total
                                </th>
                                <th>
                                    Fecha Creación
                                </th>
                                <th></th>
                                <th>Chofer</th>
                                <th>Pago</th>
                            </tr>
                        </tfoot>
                    </table>



                </div>

            </div>
        </div>
    </div>
</div>

@section Styles {

    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/footableStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
}

@section Scripts {

    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/footable")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/chosen")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.dataTables-example').DataTable({
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'ExampleFile' },
                    { extend: 'pdf', title: 'ExampleFile' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                "order": [[0, "desc"]],
                "pageLength": 25,
                "scrollX": true

            });


            $('.footable').footable();

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            // Eventos de filtros

            $('input.column_filter').on('keyup click', function () {
                filterColumn($(this).attr('data-column'));
            });

            $('select.column_filter').on('onchange click', function () {
                filterColumn($(this).attr('data-column'));
            });

            //Filtro de Chosen-select
            var config = {
                '.chosen-select': {},
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, no encontrado!' },
                '.chosen-select-width': { width: "200%" }
                //
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }


        });

        function filterColumn(i) {
            $('.dataTables-example').DataTable().column(i).search(
                $('#col' + i + '_filter').val()
            ).draw();
        }

    </script>
}

