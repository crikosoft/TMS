@model IEnumerable<TransporteCarga.Models.Proveedor>

@{
    ViewBag.Title = "Index";
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Lista</h2>
        <ol class="breadcrumb">
            <li class="active">
                <strong>Proveedor</strong>
            </li>
        </ol>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Lista de Proveedores</h5>
                    <div class="ibox-tools">
                        @Html.ActionLink("Crear Nuevo", "Create", null, new { @class = "btn btn-primary btn-xs" })
                    </div>
                </div>
                <div class="ibox-content">



                    <table class="table table-stripped table-bordered table-hover dataTables-example " data-page-size="10">

                        <thead>
                            <tr>

                                <th>
                                    @Html.DisplayNameFor(model => model.razonSocial)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.contacto)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ruc)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.direccion)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.telefono)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.email)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.nroCuenta)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Banco.nombre)
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model)
                            {
                                <tr>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.razonSocial)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.contacto)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ruc)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.direccion)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.telefono)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.email)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.nroCuenta)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Banco.nombre)
                                    </td>
                                    <td>
                                        @Html.ActionLink("Detalle", "Details", new { id = item.proveedorId }, new { @class = "btn btn-primary btn-sm" })
                                        @Html.ActionLink("Editar", "Edit", new { id = item.proveedorId }, new { @class = "btn btn-white btn-sm" })
                                        @Html.ActionLink("Eliminar", "Delete", new { id = item.proveedorId }, new { @class = "btn btn-white btn-sm" })
                                    </td>
                                </tr>
                            }


                        </tbody>
                        <tfoot>
                            <tr>

                                <th>
                                    @Html.DisplayNameFor(model => model.razonSocial)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.contacto)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ruc)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.direccion)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.telefono)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.email)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.nroCuenta)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Banco.nombre)
                                </th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>


                </div>
            </div>
        </div>
    </div>
</div>



@section Styles {

    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/footableStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
}

@section Scripts {

    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/footable")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/chosen")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.dataTables-example').DataTable({
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'ExampleFile' },
                    { extend: 'pdf', title: 'ExampleFile' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                "order": [[0, "asc"]],
                "pageLength": 25

            });


            $('.footable').footable();

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            // Eventos de filtros

            $('input.column_filter').on('keyup click', function () {
                filterColumn($(this).attr('data-column'));
            });

            $('select.column_filter').on('onchange click', function () {
                filterColumn($(this).attr('data-column'));
            });

            //Filtro de Chosen-select
            var config = {
                '.chosen-select': {},
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, no encontrado!' },
                '.chosen-select-width': { width: "200%" }
                //
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }


        });

        function filterColumn(i) {
            $('.dataTables-example').DataTable().column(i).search(
                $('#col' + i + '_filter').val()
            ).draw();
        }

    </script>
}